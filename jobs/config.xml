<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0-rc">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/nileshdevdas/siemensdevops1.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <org.jenkinsci.plugins.gwt.GenericTrigger plugin="generic-webhook-trigger@1.52">
      <spec></spec>
      <regexpFilterText></regexpFilterText>
      <regexpFilterExpression></regexpFilterExpression>
      <printPostContent>false</printPostContent>
      <printContributedVariables>false</printContributedVariables>
      <causeString>Generic Cause</causeString>
      <token>siemensdevops</token>
      <silentResponse>false</silentResponse>
    </org.jenkinsci.plugins.gwt.GenericTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>mvn package</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>mvn sonar:sonar</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>copy .\target\devopsdemo-0.0.1-SNAPSHOT.jar .\docker\myapp.jar</command>
    </hudson.tasks.BatchFile>
    <org.jenkinsci.plugins.dockerbuildstep.DockerBuilder plugin="docker-build-step@2.2">
      <dockerCmd class="org.jenkinsci.plugins.dockerbuildstep.cmd.CreateImageCommand">
        <dockerFolder>$WORKSPACE/docker</dockerFolder>
        <imageTag>amolsiemens/web</imageTag>
        <dockerFile>Dockerfile</dockerFile>
        <noCache>false</noCache>
        <rm>false</rm>
        <buildArgs></buildArgs>
      </dockerCmd>
    </org.jenkinsci.plugins.dockerbuildstep.DockerBuilder>
    <hudson.tasks.BatchFile>
      <command>SET DOCKER_HOST=tcp://192.168.237.128:2375&#xd;
C:\dockertoolbox\docker.exe run -d --name web_%BUILD_NUMBER% -p7077:7077 amolsiemens/web</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>C:\apache-jmeter-5.0\apache-jmeter-5.0\bin\jmeter.bat -Jjmeter.save.saveservice.output_format=xml -n -t testplan.jmx</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>SET DOCKER_HOST=tcp://192.168.237.128:2375&#xd;
C:\dockertoolbox\docker.exe stop web_%BUILD_NUMBER%&#xd;
C:\dockertoolbox\docker.exe rm web_%BUILD_NUMBER%</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.26.1">
      <testResults>target/surefire-reports/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.performance.PerformancePublisher plugin="performance@3.15">
      <errorFailedThreshold>-1</errorFailedThreshold>
      <errorUnstableThreshold>-1</errorUnstableThreshold>
      <errorUnstableResponseTimeThreshold></errorUnstableResponseTimeThreshold>
      <relativeFailedThresholdPositive>-1.0</relativeFailedThresholdPositive>
      <relativeFailedThresholdNegative>-1.0</relativeFailedThresholdNegative>
      <relativeUnstableThresholdPositive>-1.0</relativeUnstableThresholdPositive>
      <relativeUnstableThresholdNegative>-1.0</relativeUnstableThresholdNegative>
      <nthBuildNumber>0</nthBuildNumber>
      <configType>ART</configType>
      <graphType>ART</graphType>
      <modeOfThreshold>false</modeOfThreshold>
      <failBuildIfNoResultFile>true</failBuildIfNoResultFile>
      <compareBuildPrevious>false</compareBuildPrevious>
      <optionType>ART</optionType>
      <xml></xml>
      <modePerformancePerTestCase>false</modePerformancePerTestCase>
      <excludeResponseTime>false</excludeResponseTime>
      <modeThroughput>false</modeThroughput>
      <modeEvaluation>false</modeEvaluation>
      <constraints class="empty-list"/>
      <ignoreFailedBuilds>false</ignoreFailedBuilds>
      <ignoreUnstableBuilds>false</ignoreUnstableBuilds>
      <persistConstraintLog>false</persistConstraintLog>
      <sourceDataFiles>results.xml</sourceDataFiles>
      <junitOutput></junitOutput>
      <percentiles>0,50,90,100</percentiles>
      <baselineBuild>0</baselineBuild>
    </hudson.plugins.performance.PerformancePublisher>
    <hudson.plugins.jacoco.JacocoPublisher plugin="jacoco@3.0.4">
      <execPattern>**/**.exec</execPattern>
      <classPattern>**/classes</classPattern>
      <sourcePattern>**/src/main/java</sourcePattern>
      <sourceInclusionPattern>**/*.java</sourceInclusionPattern>
      <sourceExclusionPattern></sourceExclusionPattern>
      <inclusionPattern></inclusionPattern>
      <exclusionPattern></exclusionPattern>
      <skipCopyOfSrcFiles>false</skipCopyOfSrcFiles>
      <minimumInstructionCoverage>0</minimumInstructionCoverage>
      <minimumBranchCoverage>0</minimumBranchCoverage>
      <minimumComplexityCoverage>0</minimumComplexityCoverage>
      <minimumLineCoverage>0</minimumLineCoverage>
      <minimumMethodCoverage>0</minimumMethodCoverage>
      <minimumClassCoverage>0</minimumClassCoverage>
      <maximumInstructionCoverage>0</maximumInstructionCoverage>
      <maximumBranchCoverage>0</maximumBranchCoverage>
      <maximumComplexityCoverage>0</maximumComplexityCoverage>
      <maximumLineCoverage>0</maximumLineCoverage>
      <maximumMethodCoverage>0</maximumMethodCoverage>
      <maximumClassCoverage>0</maximumClassCoverage>
      <changeBuildStatus>false</changeBuildStatus>
      <deltaInstructionCoverage>0</deltaInstructionCoverage>
      <deltaBranchCoverage>0</deltaBranchCoverage>
      <deltaComplexityCoverage>0</deltaComplexityCoverage>
      <deltaLineCoverage>0</deltaLineCoverage>
      <deltaMethodCoverage>0</deltaMethodCoverage>
      <deltaClassCoverage>0</deltaClassCoverage>
      <buildOverBuild>false</buildOverBuild>
    </hudson.plugins.jacoco.JacocoPublisher>
  </publishers>
  <buildWrappers/>
</project>